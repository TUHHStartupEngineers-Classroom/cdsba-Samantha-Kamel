---
title: "Regression Discontinuity"
---

> ### **`Assignment 12:`**

Using the example of the coupons provided in the course content. Check how sensitive the result is to changing the bandwidth by running the analysis:  
  1. with half the bandwidth  
  2. with double the bandwidth  

  
3. New Example: For a limited amount of time, for purchases with a total amount of more than 30€ you offered free shipping. The data can be seen in shipping.rds. Have a look at the variable purchase_amount and argue whether it could generally be used as a running variable with a cut-off at 30€.Use a plot to confirm your argument.

### **Solution:**  

1,2. Coupons Example:

```{r}
#Load Libraries & Data

library(dplyr)    


df <- readRDS("D:/OneDrive/Samantha/TUHH/1stsemester/Causal Data Science for Business Analytics (SE)/Causal_Data_Science_Data/coupon.rds")
c0 <- 60

head(df)

#Analysis with half the tested band width 
bw_half <- c0 + c(-2.5, 2.5)

# Subsets below and above threshold in specified bandwidth
df_bw_half_below <- df %>% filter(days_since_last >= bw_half[1] & days_since_last < c0)
df_bw_half_above <- df %>% filter(days_since_last >= c0 & days_since_last <= bw_half[2])

df_bw_half <- bind_rows(df_bw_half_above, df_bw_half_below)
dim(df_bw_half)

# Extract values for vertical lines to visualize local average treatment effect
model_bw_half_below <- lm(purchase_after ~ days_since_last, df_bw_half_below)
model_bw_half_above <- lm(purchase_after ~ days_since_last, df_bw_half_above)

y0_half <- predict(model_bw_half_below, tibble(days_since_last = c0))
y1_half <- predict(model_bw_half_above, tibble(days_since_last = c0))

late_half <- y1_half - y0_half
sprintf("LATE of 0.5 bw: %.2f", late_half)

lm_bw_half <- lm(purchase_after ~ days_since_last_centered + coupon, df_bw_half)
summary(lm_bw_half)

#Analysis with double the tested band width 
bw_double <- c0 + c(-10, 10)

# Subsets below and above threshold in specified bandwidth
df_bw_double_below <- df %>% filter(days_since_last >= bw_double[1] & days_since_last < c0)
df_bw_double_above <- df %>% filter(days_since_last >= c0 & days_since_last <= bw_double[2])

df_bw_double <- bind_rows(df_bw_double_above, df_bw_double_below)
dim(df_bw_double)

# Extract values for vertical lines to visualize local average treatment effect
model_bw_double_below <- lm(purchase_after ~ days_since_last, df_bw_double_below)
model_bw_double_above <- lm(purchase_after ~ days_since_last, df_bw_double_above)

y0_double <- predict(model_bw_double_below, tibble(days_since_last = c0))
y1_double <- predict(model_bw_double_above, tibble(days_since_last = c0))

late_double <- y1_double - y0_double
sprintf("LATE of 2 bw: %.2f", late_double)

lm_bw_double <- lm(purchase_after ~ days_since_last_centered + coupon, df_bw_double)
summary(lm_bw_double)
```

Decreasing the bandwidth didn't have significant change, however, increasing the bandwidth made the estimate value higher. Therefore we have to include the theoretical background in our Analysis.

3. Running Variable Check:

```{r}
#Load Libraries & Data:

library(rddensity)  


shipping <- readRDS("D:/OneDrive/Samantha/TUHH/1stsemester/Causal Data Science for Business Analytics (SE)/Causal_Data_Science_Data/shipping.rds")
head(shipping)

# Visually check continuity at running variable
rddd <- rddensity(shipping$purchase_amount, c = 30)
summary(rddd)
rdd_plot <- rdplotdensity(rddd, shipping$purchase_amount, plotN = 100)
```

Based on the plot, the purchase_amount can't be used as a running variable as it is not continuous around the cutoff value. And there is no overlapping between the confedance intervals.